{"version":3,"sources":["hours.js","tags.js"],"names":["document","querySelector","search","category_id","day_id","category","days","querySelectorAll","endSearch","e","target","name","value","Object","values","includes","async","url","console","log","result","fetch","json","searchEvents","addEventListener","forEach","day","tagsInput","tagsDiv","tagsInputHidden","tags","showTags","textContent","tag","tagElement","createElement","classList","add","toUpperCase","substring","ondblclick","deleteTag","appendChild","updateInputHidden","remove","filter","toLowerCase","toString","split","keyCode","preventDefault","exec","trim"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,YAAA,GACAC,OAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,sBACAK,EAAAN,SAAAO,iBAAA,iBACAP,SAAAC,cAAA,iBAMA,SAAAO,EAAAC,GACAP,EAAAO,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MACAC,OAAAC,OAAAZ,GAAAa,SAAA,KAMAC,iBAEA,MAAAZ,OAAAA,EAAAD,YAAAA,GAAAD,EACAe,EAAA,+BAAAb,kBAAAD,IACAe,QAAAC,IAAAF,GACA,MAAAG,QAAAC,MAAAJ,SACAG,EAAAE,OATAC,GAVAlB,EAAAmB,iBAAA,SAAAhB,GACAF,EAAAmB,QAAAC,IACAA,EAAAF,iBAAA,SAAAhB,MAdA,GCAA,WACA,MAAAmB,EAAA3B,SAAAC,cAAA,eACA,GAAA0B,EAAA,CAEA,MAAAC,EAAA5B,SAAAC,cAAA,SACA4B,EAAA7B,SAAAC,cAAA,iBAEA,IAAA6B,EAAA,GA8BA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAL,QAAAQ,IACA,MAAAC,EAAAlC,SAAAmC,cAAA,MACAD,EAAAE,UAAAC,IAAA,aACAH,EAAAF,YAAAC,EAAA,GAAAK,cAAAL,EAAAM,UAAA,GACAL,EAAAM,WAAAC,EACAb,EAAAc,YAAAR,KAEAS,IAGA,SAAAF,EAAAhC,GACAA,EAAAC,OAAAkC,SACAd,EAAAA,EAAAe,OAAAZ,GAAAA,IAAAxB,EAAAC,OAAAsB,YAAAc,eACAH,IAGA,SAAAA,IACAd,EAAAjB,MAAAkB,EAAAiB,WA9CA,KAAAlB,EAAAjB,QACAkB,EAAAD,EAAAjB,MAAAoC,MAAA,KACAjB,KAIAJ,EAAAH,iBAAA,YAEA,SAAAf,GACA,GAAA,KAAAA,EAAAwC,QAAA,CACAxC,EAAAyC,iBAEA,IADA,iDACAC,KAAA1C,EAAAC,OAAAE,MAAAwC,QAEA,YADAzB,EAAAf,MAAA,IAGA,GAAAkB,EAAAf,SAAAN,EAAAC,OAAAE,MAAAkC,eAEA,YADAnB,EAAAf,MAAA,IAIAkB,EAAA,IAAAA,EAAArB,EAAAC,OAAAE,MAAAkC,cAAAM,QACAzB,EAAAf,MAAA,GACAmB,SAjCA","file":"bundle.js","sourcesContent":["(function() {\r\n  const hours = document.querySelector('#hours');\r\n  \r\n  if(hours) {\r\n    let search = {\r\n      category_id: '',\r\n      day_id: ''\r\n    };\r\n\r\n    const category = document.querySelector('[name=category_id]');\r\n    const days = document.querySelectorAll('[name=day_id]');\r\n    const inputHiddenDay = document.querySelector('[name=day_id]');\r\n    category.addEventListener('change', endSearch);\r\n    days.forEach(day => {\r\n      day.addEventListener('change', endSearch);\r\n    });\r\n\r\n    function endSearch(e) {\r\n      search[e.target.name] = e.target.value;\r\n      if(Object.values(search).includes('')) {\r\n        return ;\r\n      }\r\n      searchEvents();\r\n    }\r\n\r\n    async function searchEvents(){\r\n      // Get ids\r\n      const { day_id, category_id } = search;\r\n      const url = `/api/eventos-horario?day_id=${day_id}&category_day=${category_id}`;\r\n      console.log(url);\r\n      const result = await fetch(url);\r\n      const events = await result.json();\r\n      \r\n      getAvailableHours();\r\n    }\r\n\r\n    function getAvailableHours() {\r\n      \r\n    }\r\n  }\r\n})();","(function() {\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  if(tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags');\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Get tags from hidden input\r\n    if(tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      showTags();\r\n    }\r\n\r\n    // Listening to changes in the input\r\n    tagsInput.addEventListener('keypress', saveTag);\r\n\r\n    function saveTag(e) {\r\n      if(e.keyCode === 44) {\r\n        e.preventDefault();\r\n        const regexp = /^([A-Za-z0-9\\u002e\\u002b\\u0023\\u0020]){2,15}$/i;\r\n        if(!regexp.exec(e.target.value.trim())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        } \r\n        if (tags.includes(e.target.value.toLowerCase())) {\r\n          tagsInput.value = '';\r\n          return;\r\n        }\r\n        \r\n        tags = [...tags, e.target.value.toLowerCase().trim()];\r\n        tagsInput.value = '';\r\n        showTags();\r\n      }\r\n    }\r\n\r\n    function showTags() {\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag => {\r\n        const tagElement = document.createElement('LI');\r\n        tagElement.classList.add('form__tag');\r\n        tagElement.textContent = tag[0].toUpperCase() + tag.substring(1);\r\n        tagElement.ondblclick = deleteTag;\r\n        tagsDiv.appendChild(tagElement);\r\n      })\r\n      updateInputHidden();\r\n    }\r\n    \r\n    function deleteTag(e) {\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent.toLowerCase());\r\n      updateInputHidden();\r\n    }\r\n\r\n    function updateInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n  }\r\n})();\r\n"]}